syntax = "proto3";

option go_package = "persistent_marking_lb/proto";

package upstream.grpc.service;
import "empty.proto";

service UpstreamPeerService {
  rpc bidirectionalStreaming(stream InputStreamRequest)
      returns(stream OutputStreamRequest) {}
  rpc ready(google.protobuf.Empty) returns(ReadyResult);
  rpc live(stream google.protobuf.Empty) returns(stream LiveResult);
}

message ReadyResult {
  string time = 1;
  bool ready = 2;
}

message LiveResult {
  string time = 1;
  bool live = 2;
}

/// Request going from downstream (clients) to upstreams (servers)
message InputStreamRequest {
  string time = 1;
  string client_uuid = 2;
  bytes payload = 3;
}

/// Request going from upstream (servers) to downstreams (clients)
message OutputStreamRequest {
  string time = 1;
  enum Broadcast {
    BROADCAST_ALL = 0; BROADCAST_ACTIVE = 1; BROADCAST_NOT_ACTIVE = 2;
  }
  oneof target {
    string client_uuid = 2;
    Broadcast broadcast = 3;
  }
  bytes payload = 4;
}
